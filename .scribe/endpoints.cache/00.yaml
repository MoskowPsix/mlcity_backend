## Autogenerated by Scribe. DO NOT MODIFY.

name: Auth
description: Авторизация
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Auth
      groupDescription: Авторизация
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Регистрация нового пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
        required: true
        example: sepiisazjwpnfvblouqudfcqt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Значение поля value должно быть действительным электронным адресом.'
        required: true
        example: johnson.mireille@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Количество символов в поле value должно быть не меньше 8.'
        required: true
        example: '|b&VeU.van468h/8'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The value and <code>password</code> must match.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: sepiisazjwpnfvblouqudfcqt
      email: johnson.mireille@example.net
      password: '|b&VeU.van468h/8'
      password_confirmation: voluptatem
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b","access_token":"8|5vGu9YetQFHZymUrX5i13PQXYabBSv7JEYejB2Gmf016f4f0","token_type":"Bearer","user":{"id":6,"name":"\u0418\u043b\u044c\u0438\u043d \u0414\u0430\u043d\u0438\u043b\u0430 \u0415\u0432\u0433\u0435\u043d\u044c\u0435\u0432\u0438\u0447","email":"yfedorova@example.org","email_verified_at":"2024-11-01 05:40:38","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0448\u043b\u0430 \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Auth
      groupDescription: Авторизация
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Авторизация пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Значение поля value должно быть действительным электронным адресом. Количество символов в поле value должно быть не меньше 3.'
        required: true
        example: zvgwekqdkrnozkyymypiflcucxqufzzcjdfqpoptjotenrfrs
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Количество символов в поле value должно быть не меньше 3.'
        required: true
        example: dOV3;=-.)Z
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: zvgwekqdkrnozkyymypiflcucxqufzzcjdfqpoptjotenrfrs
      password: dOV3;=-.)Z
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043b\u0438\u0441\u044c","access_token":"9|Axjjuwqfo4cWCVDZwJH6b2Jg01WncCrMLSxSa5GFdaaff69c","token_type":"Bearer","user":{"id":7,"name":"\u0422\u0430\u0442\u044c\u044f\u043d\u0430 \u0424\u0451\u0434\u043e\u0440\u043e\u0432\u043d\u0430 \u0424\u0440\u043e\u043b\u043e\u0432\u0430","email":"albert54@example.org","email_verified_at":"2024-11-01 05:40:39","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u041d\u0435\u0443\u0434\u0430\u0447\u043d\u0430\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u041d\u0435\u0443\u0434\u0430\u0447\u043d\u0430\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Auth
      groupDescription: Авторизация
      subgroup: ''
      subgroupDescription: ''
      title: logout
      description: 'Выход пользователя'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0432\u044b\u0448\u0435\u043b"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status":"error","message":"\u041f\u0440\u0438 \u0432\u044b\u0445\u043e\u0434\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u044f \u043e\u0448\u0438\u0431\u043a\u0430"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/admin/reset_password
    metadata:
      groupName: Auth
      groupDescription: Авторизация
      subgroup: ''
      subgroupDescription: ''
      title: ResetPasswordForAdmin
      description: 'Смена пароля пользоватя для Админа'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      new_password:
        name: new_password
        description: 'Количество символов в поле value должно быть не меньше 8.'
        required: true
        example: ohnipfogrmilpmbfe
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The value and <code>new_password</code> must match.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      user_id: tempore
      new_password: ohnipfogrmilpmbfe
      password_confirmation: est
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"error","messages":"\u041f\u0430\u0440\u043e\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0451\u043d."}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status":"error","messages":"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0441\u043c\u0435\u043d\u0435 \u043f\u0430\u0440\u043e\u043b\u044f. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043f\u043e\u0437\u0436\u0435."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/verificationEmail
    metadata:
      groupName: Auth
      groupDescription: Авторизация
      subgroup: ''
      subgroupDescription: ''
      title: GenerateCodeForEmail
      description: 'Отправка кода для смены или подтверждения почты на почту'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u043e\u0434 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u043f\u043e\u0447\u0442\u0443"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status":"success","message":"\u041f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/verificationUserEmail
    metadata:
      groupName: Auth
      groupDescription: Авторизация
      subgroup: ''
      subgroupDescription: ''
      title: VerifyEmailForCode
      description: 'Подтверждения почты пользователя по коду'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Значение поля value должно быть не меньше 999. Значение поля value не может быть больше 10000.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      code: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041f\u043e\u0447\u0442\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0430","user":{"id":9,"name":"\u041c\u0430\u043a\u0430\u0440 \u0412\u043b\u0430\u0434\u0438\u043c\u0438\u0440\u043e\u0432\u0438\u0447 \u041f\u043e\u043b\u044f\u043a\u043e\u0432","email":"prokor.isakov@example.com","email_verified_at":"2024-11-01 05:40:40","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u041a\u043e\u0434 \u043d\u0435 \u0432\u0435\u0440\u043d\u044b\u0439 \u0438\u043b\u0438 \u043f\u043e\u0447\u0442\u0430 \u0443\u0436\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0430"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u041a\u043e\u0434 \u043d\u0435 \u0432\u0435\u0440\u043d\u044b\u0439 \u0438\u043b\u0438 \u043f\u043e\u0447\u0442\u0430 \u0443\u0436\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0430"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u041d\u0435 \u0432\u0435\u0440\u043d\u044b\u0439 \u043a\u043e\u0434"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status":"error","message":"\u0412\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0447\u0442\u044b \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/resetEmail
    metadata:
      groupName: Auth
      groupDescription: Авторизация
      subgroup: ''
      subgroupDescription: ''
      title: ResetEmailForCode
      description: 'Смена подтверждённой почты'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Количество символов в поле value должно быть не меньше 4. Количество символов в значении поля value не может превышать 4.'
        required: true
        example: kcin
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      0:
        name: '0'
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      1:
        name: '1'
        description: 'Значение поля value должно быть действительным электронным адресом.'
        required: false
        example: sboehm@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      code: kcin
      email: autem
      1: sboehm@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u0412\u0430\u0448\u0430 \u043f\u043e\u0447\u0442\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0430. \u041d\u0430 \u0432\u0430\u0448\u0443 \u043d\u043e\u0432\u0443\u044e \u043f\u043e\u0447\u0442\u0443 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u043f\u0438\u0441\u044c\u043c\u043e \u0441 \u043a\u043e\u0434\u043e\u043c \u0434\u043b\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f","user":{"id":10,"name":"\u041a\u043e\u0440\u043e\u043b\u0451\u0432\u0430 \u0418\u043d\u0435\u0441\u0441\u0430 \u041b\u044c\u0432\u043e\u0432\u043d\u0430","email":"zzuravleva@example.org","email_verified_at":"2024-11-01 05:40:40","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u0412\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u043f\u043e\u0447\u0442\u044b \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u041d\u0435 \u0432\u0435\u0440\u043d\u044b\u0439 \u043a\u043e\u0434"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u041a\u043e\u0434 \u043d\u0435 \u0432\u0435\u0440\u043d\u044b\u0439 \u0438\u043b\u0438 \u043f\u043e\u0447\u0442\u0430 \u0443\u0436\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0430"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status":"error","message":"\u041a\u043e\u0434 \u043d\u0435 \u0432\u0435\u0440\u043d\u044b\u0439 \u0438\u043b\u0438 \u043f\u043e\u0447\u0442\u0430 \u0443\u0436\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0430"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/users/email
    metadata:
      groupName: Auth
      groupDescription: Авторизация
      subgroup: ''
      subgroupDescription: ''
      title: EditEmailNotVerify
      description: 'Смена не подтверждённой почты'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: magni
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      0:
        name: '0'
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      1:
        name: '1'
        description: 'Значение поля value должно быть действительным электронным адресом.'
        required: false
        example: ullrich.stephen@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: magni
      1: ullrich.stephen@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041f\u043e\u0447\u0442\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0430","verification_url":{"id":11,"name":"\u0414\u0430\u0432\u0438\u0434 \u041b\u044c\u0432\u043e\u0432\u0438\u0447 \u0413\u0430\u0432\u0440\u0438\u043b\u043e\u0432","email":"jkovalev@example.com","email_verified_at":"2024-11-01 05:40:40","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043f\u043e\u0447\u0442\u0443, \u043e\u043d\u0430 \u0443\u0436\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0430"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status":"error","message":"\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u043f\u043e\u0447\u0442\u044b"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []

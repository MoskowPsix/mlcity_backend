version: '3.9'
services:
  db:
    image: postgres:16-alpine
    container_name: MLCity_database
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - "./db/data:/var/lib/postgresql/data"
    networks:
      - db-net

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: dockerfile
    ports:
        - "${APP_PORT}:443"
    depends_on:
        - backend
    volumes:
        - ../:/var/www/MLCity_backend
        - ./nginx/conf.d/:/etc/nginx/conf.d
    networks:
      - ng-net

  backend:
    container_name: MLCity_backend
    build:
      context: ./php
      dockerfile: dockerfile
    volumes:
      - "../:/var/www/MLCity_backend"
    environment:
      - APP_URL=${APP_URL}
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT=${POSTGRES_PORT}
      - DB_DATABASE=${POSTGRES_DB}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTICSEARCH_ENABLED=true
      - ELASTICSEARCH_HOSTS=elasticsearch:${ELASTIC_PORT}
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=cache
      - REDIS_CLIENT=phpredis
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - cache-net
      - db-net
      - es-net
      - ng-net
    ports:
      - "9000:9000"
    working_dir: /var/www/MLCity_backend
    # command: composer install && php artisan migrate

  worker:
    deploy:
      mode: replicated
      replicas: 10
    command: php artisan queue:work --daemon
    build:
      context: ./php
      dockerfile: dockerfile
    volumes:
      - "../:/var/www/MLCity_backend"
    environment:
      - APP_URL=${APP_URL}
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT=${POSTGRES_PORT}
      - DB_DATABASE=${POSTGRES_DB}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTICSEARCH_ENABLED=true
      - ELASTICSEARCH_HOSTS=elasticsearch:${ELASTIC_PORT}
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=cache
      - REDIS_CLIENT=phpredis
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - cache-net
      - db-net
      - es-net
    working_dir: /var/www/MLCity_backend

  artisan:
    depends_on:
      - backend
    build:
      context: ./php
      dockerfile: dockerfile
    volumes:
      - "../:/var/www/MLCity_backend"
    working_dir: /var/www/MLCity_backend
    entrypoint: ["/bin/bash"]
    command: ["-c", "chmod -R 777 storage && composer install && php artisan migrate --force"]

  elasticsearch:
    image: elasticsearch:8.15.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
    ports:
      - "${ELASTIC_PORT}:9200"
      - "9300:9300"
    networks:
      - es-net
  kibana:
    image: kibana:8.15.3
    environment:
      - xpack.monitoring.enabled=true         # Включить мониторинг
      - xpack.security.enabled=false          # Включить безопасность
      - xpack.reporting.enabled=true         # Включить отчёты
      - xpack.graph.enabled=true             # Включить графики
      - ELASTICSEARCH_URL=https://elasticsearch:${ELASTIC_PORT}
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "${KIBANA_PORT}:5601"
    networks:
      - es-net
    depends_on:
      - elasticsearch

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - cache-net
  portainer:
    image: portainer/portainer-ce
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always

networks:
  db-net:
  es-net:
  ng-net:
  cache-net:

#volumes:
#  esdata1:
#    driver: local

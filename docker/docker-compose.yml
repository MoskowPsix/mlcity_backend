services:
  db:
    image: postgres:16
    restart: always
    deploy:
        replicas: 1
        restart_policy:
            delay: 5s
            condition: on-failure
        resources:
            limits:
                cpus: "0.5"
                memory: "512M"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "${DB_PORT}:5432"
    user: "1000:1000"
    volumes:
      - ./db/data:/var/lib/postgresql/data
    networks:
      - db-net

  nginx:
    restart: always
    deploy:
        replicas: 1
        restart_policy:
            delay: 5s
            condition: on-failure
        resources:
            limits:
                cpus: "0.5"
                memory: "256M"
    build:
      context: ./nginx
      dockerfile: dockerfile
    ports:
        - "${APP_PORT}:443"
    depends_on:
        - backend
    user: "1000:1000"
    volumes:
        - ../:/var/www/MLCity_backend
        - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - ng-net

  backend:
    env_file: .env
    restart: always
    image: bitnami/laravel
    deploy:
        replicas: 1
        restart_policy:
            delay: 5s
            condition: on-failure
        resources:
            limits:
                cpus: "0.5"
                memory: "512M"
#    build:
#      context: ./php
#      dockerfile: dockerfile
    volumes:
      - ../:/var/www/MLCity_backend
    networks:
      - cache-net
      - db-net
      - es-net
      - ng-net
    ports:
      - "9000:9000"
    working_dir: /var/www/MLCity_backend

  worker:
    env_file: .env
    restart: always
    image: bitnami/laravel
    deploy:
        replicas: 10
        restart_policy:
            delay: 5s
            condition: on-failure
        resources:
            limits:
                cpus: "0.2"
                memory: "256M"
    command: php artisan queue:work --daemon
#    build:
#      context: ./php
#      dockerfile: dockerfile
    volumes:
      - ../:/var/www/MLCity_backend
    networks:
      - cache-net
      - db-net
      - es-net
    working_dir: /var/www/MLCity_backend

  elasticsearch:
    image: elasticsearch:8.15.3
    restart: always
    deploy:
        replicas: 1
        restart_policy:
            delay: 5s
            condition: on-failure
        resources:
            limits:
                cpus: "0.5"
                memory: "512M"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - ELASTIC_USERNAME=${ELASTICSEARCH_USERNAME}
    ports:
      - "${ELASTIC_PORT}:9200"
      - "9300:9300"
    networks:
      - es-net
  kibana:
    image: kibana:8.15.3
    restart: always
    deploy:
        replicas: 1
        restart_policy:
            delay: 5s
            condition: on-failure
        resources:
            limits:
                cpus: "0.5"
                memory: "512M"
    environment:
      - xpack.monitoring.enabled=true         # Включить мониторинг
      - xpack.security.enabled=false          # Включить безопасность
      - xpack.reporting.enabled=true         # Включить отчёты
      - xpack.graph.enabled=true             # Включить графики
      - ELASTICSEARCH_URL=https://elasticsearch:${ELASTIC_PORT}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ports:
      - "${KIBANA_PORT}:5601"
    networks:
      - es-net
    depends_on:
      - elasticsearch

  cache:
    image: redis:6.2-alpine
    deploy:
        replicas: 1
        restart_policy:
            delay: 5s
            condition: on-failure
        resources:
            limits:
                cpus: "0.2"
                memory: "512M"
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - cache-net

networks:
  db-net:
  es-net:
  ng-net:
  cache-net:


#volumes:
#    laravel_volume:
#        driver: local
#        driver_opts:
#            type: nfs
#            o: addr=master,nolock
#            device: ":/srv/code/mlcity_backend/int_vld"
#    nginx_volume:
#        driver: local
#        driver_opts:
#            type: nfs
#            o: addr=master,nolock
#            device: ":/srv/code/mlcity_backend/int_vld/docker/nginx/conf.d/"
#    db_volume:
#        driver: local
#        driver_opts:
#            type: nfs
#            o: addr=master,nolock
#            device: ":/srv/db/data"

